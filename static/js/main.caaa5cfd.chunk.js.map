{"version":3,"sources":["components/Navigation.js","components/ImageLinkForm.js","components/brain-logo.png","components/Logo.js","components/Rank.js","components/ImageBorder.js","components/placeholder.png","components/ImageHolder.js","components/SignIn/SignIn.js","components/Register/Register.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Navigation","routeChange","style","display","justifyContent","fontWeight","className","onClick","ImageLinkForm","inputChange","inputSubmit","transformStyle","perspective","tiltMaxAngleX","tiltMaxAngleY","transform","type","placeholder","onChange","Logo","marginTop","width","border","background","src","BrainLogo","alt","Rank","name","rank","ImageBorder","num","numCol","arrLength","height","borderTopLeftRadius","borderTopRightRadius","position","color","fontSize","textAlign","top","ImageHolder","input","state","calcRegion","link","key","bordersArr","Placeholder","map","item","styleImg","boxShadow","cursor","borderBottomLeftRadius","borderBottomRightRadius","topRow","bottom","bottomRow","left","leftCol","right","rightCol","length","id","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","port","method","headers","body","JSON","stringify","email","password","then","res","json","data","laodUser","console","log","bind","this","tiltReverse","htmlFor","Component","Register","onNameChanged","registerName","onEmailChanged","registerEmail","onPasswordChanged","registerPassword","onSubmitRegister","app","Clarifai","apiKey","App","calculateFaceBorder","boxArr","outputs","regions","arrayOfRegions","i","box","region_info","bounding_box","img","document","getElementById","imgWidth","Number","imgHeight","imgTop","offsetTop","imgLeft","offsetLeft","w","window","innerWidth","h","innerHeight","left_col","top_row","right_col","bottom_row","push","calculateRegion","onInputChange","onInputSubmit","user","models","predict","Object","assign","hasBorder","catch","err","onRouteChange","route","onLoadUser","joined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.caaa5cfd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({routeChange}) => {\r\n    const style = {\r\n        display:'flex',\r\n        justifyContent:'flex-end',\r\n        fontWeight:'500'\r\n    }\r\n    return(\r\n        <nav style = {style}>\r\n            <p\r\n                className = 'f3 link dim underline pa3 pointer white'\r\n                // onClick = {routeChange('signin')} //with this we are running function - WRONG!!!\r\n                onClick = {() => routeChange('signin')} // we run function when is clicked\r\n            >Sign out</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\nimport '../components/ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({inputChange, inputSubmit}) => {\r\n    return(\r\n        <div>\r\n            {/* <p className = 'f4 white'>\r\n                {'This Magic Brain will detect faces in your pictures.'}\r\n            </p> */}\r\n            <Tilt  className = 'w-50 center' style = {{transformStyle: 'preserve-3d'}} perspective={10000} tiltMaxAngleX={10} tiltMaxAngleY={10}>\r\n                <div  className = 'jox w-100 center pa5 shadow-5 br3'>\r\n                    <input\r\n                        style = {{transform: 'translateZ(50px)'}}\r\n                        className = 'f4 pa3 w-80 center'\r\n                        type = 'text'\r\n                        placeholder = 'type image URL'\r\n                        onChange = {inputChange}\r\n                        \r\n                    />\r\n                    <button\r\n                        className = 'f4 pa3 w-20 grow'\r\n                        style = {{transform: 'translateZ(50px)'}}\r\n                        onClick = {inputSubmit}\r\n                        >Detect</button>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","export default __webpack_public_path__ + \"static/media/brain-logo.1b9088b2.png\";","import React from 'react';\r\nimport BrainLogo from './brain-logo.png';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\nconst Logo = () => {\r\n    const tilt = {\r\n        width:'250px',\r\n        border: '1px dotted rgba(255,255,255,.4)',\r\n        background:'rgba(255,255,255,.1)',\r\n        transformStyle: 'preserve-3d'\r\n    }\r\n\r\n    const styleDiv = {\r\n        display:'flex',\r\n        justifyContent:'flex-start',\r\n        marginTop:'-40px'\r\n    }\r\n\r\n    const styleImg = {\r\n        transform: 'translateZ(50px)'\r\n    }\r\n\r\n    return(\r\n        <div style = {styleDiv} className = 'pl5'>\r\n            <Tilt  className = 'br3 shadow-5' style = {tilt} perspective={1500}>\r\n                <img  style = {styleImg} src = {BrainLogo} alt = 'Logo' />\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({name, rank}) => {\r\n    return(\r\n        <div className = 'white'>\r\n            <div className = 'f3'>{`${name}, you currenty rank is...`}</div>\r\n            <div className = 'f1'>{`#${rank}`}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n// import '../components/imageBorder.css'\r\n\r\nconst ImageBorder = ({style, num, arrLength}) => {\r\n    let numCol = 'white';\r\n    if (num === arrLength){\r\n        numCol = 'black';\r\n    }\r\n    \r\n    return(\r\n        <div className = ''>\r\n            <div style = {style}>\r\n\r\n                <div style = {{\r\n                    width:'100%',\r\n                    height:'16px',\r\n                    background:'rgb(0,200,255)',\r\n                    marginTop:'-16px',\r\n                    borderTopLeftRadius: '6px',\r\n                    borderTopRightRadius: '6px',\r\n                    // marginLeft:'10px',\r\n\r\n                    }}><p style ={{\r\n                        position:'relative',\r\n                        color:numCol,\r\n                        fontSize:'11px',\r\n                        textAlign:'center',\r\n                        top:'2px',\r\n                        fontWeight:'bold'\r\n                    }}\r\n                    >{num}</p></div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageBorder;","export default __webpack_public_path__ + \"static/media/placeholder.184b1552.png\";","import React from 'react';\r\nimport ImageBorder from './ImageBorder';\r\nimport Placeholder from './placeholder.png'\r\n\r\nconst ImageHolder = ({input, state, calcRegion}) => {\r\n\r\n    let link = ''\r\n    \r\n    let key = 0;\r\n    let bordersArr = ''\r\n    \r\n    if (input === ''){\r\n        link = Placeholder;\r\n    }else {\r\n        link = input\r\n    }\r\n\r\n    if(state === true){\r\n        bordersArr = calcRegion.map((item) => {\r\n            \r\n            const styleImg = {\r\n                position: 'absolute',\r\n                boxShadow: '0 0 0 2px rgb(0,200,255) inset',\r\n                cursor: 'pointer',\r\n                borderBottomLeftRadius: '10px',\r\n                borderBottomRightRadius: '10px',\r\n                top:`${item.topRow}px`,\r\n                bottom:`${item.bottomRow}px`,\r\n                left:`${item.leftCol}px`,\r\n                right:`${item.rightCol}px`\r\n            }\r\n            key++;\r\n            return <ImageBorder key = {key} style = {styleImg} num = {key} arrLength = {calcRegion.length}/>\r\n        })\r\n    }else {\r\n        bordersArr = <h1 style = {{position:'absolute'}}>   </h1> \r\n        \r\n    }\r\n\r\n    return(\r\n        <div className = ''>\r\n            <div className = 'center ma4 pa3'>\r\n                <img\r\n                    id = 'imgFace'\r\n                    className = 'w-60'\r\n                    alt = 'detectImg'\r\n                    src = {link}\r\n\r\n                />\r\n                {bordersArr} \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ImageHolder;","import React, { Component } from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\n\r\nclass SignIn extends Component  {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            signInEmail:'',\r\n            signInPassword:''\r\n        }\r\n        //bind to avoid 'TypeError: Cannot read property 'setState' of undefined'\r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.onSubmitSignIn = this.onSubmitSignIn.bind(this);\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail:event.target.value});\r\n    }\r\n    \r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword:event.target.value});\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        const {signInEmail, signInPassword} = this.state;\r\n        fetch(`${this.props.port}/signin`, {\r\n            method: 'post',\r\n            headers:{'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email:signInEmail,\r\n                password:signInPassword\r\n            })\r\n        }).then(res => res.json()).then(data => {\r\n            if (data[0] === \"Success\"){\r\n                this.props.laodUser(data[1]);\r\n                this.props.routeChange('home')\r\n            }else{\r\n                console.log(data);\r\n            }\r\n        });      \r\n    }\r\n\r\n\r\n    render() {\r\n        const {routeChange} = this.props;\r\n        return(\r\n            <Tilt className = 'w-30 center' perspective={1000} tiltReverse={true} tiltMaxAngleX={6} tiltMaxAngleY={6} style = {{transformStyle: 'preserve-3d'}}>\r\n    \r\n                <article className=\"br2 ba b--white-20 shadow-2 mv5 w-100 center bg-white-0 jox\">\r\n    \r\n                    <main className=\"pa4 black-80\"  style = {{transform: 'translateZ(50px)'}}>\r\n                        <div className=\"measure center\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                                <div className=\"mt3 pa3\" >\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input\r\n                                        onChange = {this.onEmailChange}\r\n                                        className=\"pa3 input-reset ba bg-white hover-bg-black hover-white w-100\"\r\n                                        type=\"email\"\r\n                                        name=\"email-address\"\r\n                                        id=\"email-address\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3 pa3 \" >\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" >Password</label>\r\n                                    <input  \r\n                                        onChange = {this.onPasswordChange}\r\n                                        className=\"b pa3 input-reset ba bg-white hover-bg-black hover-white w-100\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib\"\r\n                                    type=\"submit\"\r\n                                    value=\"Sign in\"\r\n                                    onClick = {this.onSubmitSignIn}\r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3 pointer\">\r\n                                <p\r\n                                    onClick = {() => routeChange('register')}\r\n                                    className=\"f6 link dim black db\">Register</p>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </Tilt>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport Tilt from 'react-parallax-tilt';\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            registerName: '',\r\n            registerEmail:'',\r\n            registerPassword:''\r\n        }\r\n\r\n        this.onNameChanged = this.onNameChanged.bind(this);\r\n        this.onEmailChanged = this.onEmailChanged.bind(this);\r\n        this.onPasswordChanged = this.onPasswordChanged.bind(this);\r\n        \r\n    }\r\n\r\n    onNameChanged = (event) => {\r\n        this.setState({registerName: event.target.value})\r\n    }\r\n\r\n    onEmailChanged = (event) => {\r\n        this.setState({registerEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChanged = (event) => {\r\n        this.setState({registerPassword: event.target.value})\r\n    }\r\n    \r\n    onSubmitRegister = () => {\r\n        const {registerName, registerEmail, registerPassword} = this.state;\r\n        if(registerName && registerEmail && registerPassword){\r\n            fetch(`${this.props.port}/register`, { \r\n                method: 'post', \r\n                headers: {'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    name:registerName,\r\n                    email:registerEmail,\r\n                    password:registerPassword\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.name === 'error'){\r\n                    console.log('User already exists');\r\n                }else{\r\n                    this.props.laodUser(data);\r\n                    this.props.routeChange('home');\r\n\r\n                }\r\n            })\r\n        }else{\r\n            console.log('Please fill a fields.')\r\n        }\r\n\r\n    }\r\n\r\n    render (){\r\n        const {routeChange} = this.props;\r\n        return(\r\n            <Tilt className = 'w-30 center' perspective={1000} tiltReverse={true} tiltMaxAngleX={6} tiltMaxAngleY={6} style = {{transformStyle: 'preserve-3d'}}>\r\n    \r\n                <article className=\"br2 ba b--white-20 shadow-2 mv5 w-100 center bg-white-0 jox\">\r\n    \r\n                    <main className=\"pa4 black-80\"  style = {{transform: 'translateZ(70px)'}}>\r\n                        <div className=\"measure center\">\r\n                            <fieldset id=\"register\" className=\"ba b--transparent ph0 mh0\">\r\n                                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                                <div className=\"mt3 pa3\" >\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                    <input\r\n                                        onChange = {this.onNameChanged}\r\n                                        className=\"pa3 input-reset ba bg-white hover-bg-black hover-white w-100\"\r\n                                        type=\"text\"\r\n                                        name=\"name\" \r\n                                        id=\"name\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"mt3 pa3\" >\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                    <input \r\n                                        onChange = {this.onEmailChanged}\r\n                                        className=\"pa3 input-reset ba bg-white hover-bg-black hover-white w-100\" \r\n                                        type=\"email\"\r\n                                        name=\"email-address\" \r\n                                        id=\"email-address-reg\"  \r\n                                    />\r\n                                </div>\r\n                                <div className=\"mv3 pa3 \" >\r\n                                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\" >Password</label>\r\n                                    <input \r\n                                        onChange = {this.onPasswordChanged}\r\n                                        className=\"b pa3 input-reset ba bg-white hover-bg-black hover-white w-100\" \r\n                                        type=\"password\"\r\n                                        name=\"password\" \r\n                                        id=\"password-reg\"\r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                                <input\r\n                                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f4 dib\"\r\n                                    type=\"submit\"\r\n                                    value=\"Register\"\r\n                                    onClick = {this.onSubmitRegister}\r\n                                />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3 pointer\">\r\n                                <p\r\n                                    onClick = {() => routeChange('signin')}\r\n                                    className=\"f6 link dim black db\">Sign in</p>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </main>\r\n                </article>\r\n            </Tilt>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import './App.css';\nimport Navigation from '../components/Navigation';\nimport ImageLinkForm from '../components/ImageLinkForm';\nimport Logo from '../components/Logo';\nimport Rank from '../components/Rank';\nimport ImageHolder from '../components/ImageHolder';\nimport SignIn from '../components/SignIn/SignIn';\nimport Register from '../components/Register/Register';\nimport React, { Component, Fragment } from 'react';\nimport * as Clarifai from 'clarifai';\nimport 'tachyons';\n\nconst app = new Clarifai.App({\n  apiKey: '5213ebb3b8e5468c8593354e351585b1'\n });\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.port = 'https://protected-stream-63984.herokuapp.com';\n    this.state = {\n      input:'',\n      hasBorder: true,\n      calculateRegion:[],\n      route:'signin',\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        rank:0,\n        joined:''\n      }\n    }\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:4000/users')\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }\n\n  calculateFaceBorder = (data)=>{\n    const boxArr = data.outputs[0].data.regions;\n    const arrayOfRegions = []\n    // this.setState({calculateRegion:[]});\n    for (let i = 0; i < boxArr.length; i++) {\n        const box = data.outputs[0].data.regions[i].region_info.bounding_box;\n\n        const img = document.getElementById('imgFace');\n        const imgWidth  = Number(img.width); \n        const imgHeight = Number(img.height);\n    \n        const imgTop = Number(img.offsetTop);\n        const imgLeft = Number(img.offsetLeft);\n    \n        const w = Number(window.innerWidth);\n        const h = Number(window.innerHeight);\n    \n        let calcRegion = {\n          leftCol:box.left_col * imgWidth + imgLeft,\n          topRow:box.top_row * imgHeight + imgTop,\n          rightCol:imgWidth - (box.right_col * imgWidth) + (w - (imgLeft + imgWidth)),\n          bottomRow: imgHeight - (box.bottom_row * imgHeight) + (h - (imgTop + imgHeight))\n        }\n        arrayOfRegions.push(calcRegion);\n    }\n    this.setState({calculateRegion:arrayOfRegions});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input:event.target.value});\n    // console.log(event);\n  }\n\n  onInputSubmit = () =>{\n    const {user} = this.state;\n    \n    // console.log(this.state.input);\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n    .then(data => {\n        fetch(`${this.port}/image`, {\n          method:'put',\n          headers:{'Content-Type': 'application/json'},\n          body:JSON.stringify({\n            id:user.id\n          })\n        })\n        .then(res => res.json())\n        .then(data => {\n          //AKO HOCEMO DA APDEJTUJEMO SAMO JEDAN ELEMENT OBJEKTA U OBJEKTU\n          this.setState(Object.assign(user, {rank:data.rank}));\n        })  \n        // console.log(data);\n        this.calculateFaceBorder(data);\n        this.setState({hasBorder:true})\n\n      })\n      .catch(err => console.log('Error:', err))\n  }\n\n  onRouteChange = (route) =>{\n    this.setState({route:route});\n    this.setState({input:''});\n    this.setState({hasBorder:false})\n\n  }\n\n  onLoadUser = (data) => {\n    \n    this.setState({user: {\n        id:data.id,\n        name:data.name,\n        email:data.email,\n        rank:data.rank,\n        joined:data.joined\n      }})\n  }\n\n  render(){\n    const {input, hasBorder, calculateRegion, route, user} = this.state;\n    return (\n      <div className=\"App\">\n        { route === 'home'\n          ?\n          <Fragment>\n            <Navigation routeChange = {this.onRouteChange}/>\n            <Logo/>\n            <Rank name = {user.name} rank = {user.rank}/>\n            <ImageLinkForm inputChange = {this.onInputChange} inputSubmit = {this.onInputSubmit}/>\n            <ImageHolder input = {input} state = {hasBorder} calcRegion = {calculateRegion}/>\n          </Fragment>\n          :\n          (\n            route === 'signin'\n            ?  \n            <SignIn port = {this.port} routeChange = {this.onRouteChange} laodUser = {this.onLoadUser}/>\n            :\n            <Register port = {this.port} routeChange = {this.onRouteChange} laodUser = {this.onLoadUser}/>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}